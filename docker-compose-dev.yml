version: '3'

services:
  nginx:
    image: nginx:1.18
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/sites.template.${DOCKER_PROXY_NGINX_TEMPLATE:-docker}:/etc/nginx/sites.template
      - ./nginx/default/html:/var/www/html
      - ./data/log/nginx:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOSTNAME=${HOST_NAME}
    depends_on:
      - broker
      - rooms
    command: /bin/bash -c "envsubst '$$NGINX_HOSTNAME' < /etc/nginx/sites.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    logging:
      driver: journald

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/log/certbot:/var/log/letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  postgres:
    image: postgres:11.5-alpine
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    logging:
      driver: journald

  broker:
    image: ${DOCKER_REPO:-bigbluebutton}/bbb-lti-broker:${DOCKER_TAG:-latest}
    container_name: broker
    restart: unless-stopped
    volumes:
      - ./broker/seeds.rb:/usr/src/app/db/seeds.rb
      - ./data/log/broker/production.log:/usr/src/app/log/production.log
      - ./broker/src/app/:/usr/src/app/
    env_file: broker/.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432}/bbb_lti_broker_production
      DEVELOPER_MODE_ENABLED: "true"
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-false}
    links:
      - postgres
    logging:
      driver: journald
    # for debugging
    # entrypoint: "/bin/sh -c 'tail -f /dev/null'"

  rooms:
    image: ${DOCKER_REPO:-bigbluebutton}/bbb-app-rooms:${DOCKER_TAG:-latest}
    container_name: rooms
    restart: unless-stopped
    volumes:
      - ./data/log/rooms/production.log:/usr/src/app/log/production.log
      - ./rooms/src/app/:/usr/src/app/
    env_file: rooms/.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432}/bbb_lti_rooms_production
      DEVELOPER_MODE_ENABLED: "true"
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-false}
    links:
      - postgres
    logging:
      driver: journald
    # for debugging
    # entrypoint: "/bin/sh -c 'tail -f /dev/null'"
